// Generated by CoffeeScript 1.3.2
var peep,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

peep = {};

peep.JSONP = function(location) {
  var script;
  script = document.createElement('script');
  script.src = location;
  return document.querySelector('head').appendChild(script);
};

peep.openPopup = function(url, w, h) {
  var x, y;
  w || (w = 626);
  h || (h = 436);
  x = (screen.width / 2) - (w / 2);
  y = (screen.height / 2) - (h / 2);
  return window.open(url, 'peepshare', 'toolbar=0,status=0,resizable=1,width=' + w + ',height=' + h + ',top=' + y + ',left=' + x);
};

peep.Peep = (function() {

  function Peep(selector, options) {
    var index, node, stylesheet, _base, _i, _len, _ref;
    this.selector = selector;
    this.options = options;
    this.selector || (this.selector = '.peep');
    this.options || (this.options = {});
    (_base = this.options).theme || (_base.theme = 'default');
    peep.instances = [];
    _ref = document.querySelectorAll(this.selector);
    for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
      node = _ref[index];
      node.setAttribute('data-id', index);
      new peep.Instance(node);
    }
    if (this.options.theme !== 'none') {
      stylesheet = document.createElement('link');
      stylesheet.rel = 'stylesheet';
      stylesheet.href = this.options.theme.substr(0, 7) === 'http://' || this.options.theme.substr(0, 8) === 'https://' ? this.options.theme : 'themes/' + this.options.theme + '.css';
      document.querySelector('head').appendChild(stylesheet);
    }
  }

  return Peep;

})();

peep.Instance = (function() {

  function Instance(node) {
    var dataset,
      _this = this;
    this.node = node;
    dataset = this.node.dataset;
    this.id = dataset.id;
    this.url = dataset.url || window.location.href;
    this.title = dataset.title || document.title;
    this.services = dataset.services || 'Twitter, Facebook';
    peep.instances[this.id] = {};
    peep.instances[this.id].services = [];
    this.services.replace(/^\s*|\s*$/g, '').split(/\s*,\s*/).forEach(function(service) {
      if (peep[service]) {
        return peep.instances[_this.id].services[service] = new peep[service](_this.node, _this.id, _this.url, _this.title);
      } else {
        return console.error("\"" + service + "\" service doesn't exist.");
      }
    });
  }

  return Instance;

})();

peep.Service = (function() {

  function Service() {}

  Service.prototype.render = function() {
    this.node.innerHTML += "<div class=\"peep_share " + this["class"] + "\"><a href=\"" + this.endpoints.share + "\" class=\"label\" onclick=\"peep.openPopup(this.href);return false;\">" + this.label + "</a></div>";
    if (this.endpoints.count) {
      peep.JSONP(this.endpoints.count);
      return this.node.querySelector("." + this["class"]).innerHTML += '<span class=\"count loading\">...</span>';
    }
  };

  Service.prototype.callback = function(res) {
    var count;
    count = this.node.querySelector("." + this["class"] + " .count");
    count.removeAttribute('loading');
    return count.innerHTML = eval(this.path) || 0;
  };

  return Service;

})();

peep.Delicious = (function(_super) {

  __extends(Delicious, _super);

  function Delicious(node, id, url, title) {
    this.node = node;
    this.id = id;
    this.url = url;
    this.title = title;
    this.label = 'Delicious';
    this["class"] = 'delicious';
    this.endpoints = {
      share: "http://del.icio.us/post?url=" + this.url + "&title=" + this.title,
      count: "http://feeds.delicious.com/v2/json/urlinfo/data?url=" + this.url + "&callback=peep.instances[" + this.id + "].services.Delicious.callback"
    };
    this.path = 'res[0].total_posts';
    this.render();
  }

  return Delicious;

})(peep.Service);

peep.Facebook = (function(_super) {

  __extends(Facebook, _super);

  function Facebook(node, id, url, title) {
    this.node = node;
    this.id = id;
    this.url = url;
    this.title = title;
    this.label = 'Facebook';
    this["class"] = 'facebook';
    this.endpoints = {
      share: "http://www.facebook.com/sharer.php?t=" + this.title + "&u=" + this.url,
      count: "http://graph.facebook.com/" + this.url + "?callback=peep.instances[" + this.id + "].services.Facebook.callback"
    };
    this.path = 'res.shares';
    this.render();
  }

  return Facebook;

})(peep.Service);

peep.GooglePlus = (function(_super) {

  __extends(GooglePlus, _super);

  function GooglePlus(node, id, url, title) {
    this.node = node;
    this.id = id;
    this.url = url;
    this.title = title;
    this.label = 'Google+';
    this["class"] = 'googleplus';
    this.endpoints = {
      share: "https://plus.google.com/share?url=" + this.url,
      count: "http://plusonecount.herokuapp.com/?url=" + this.url + "&callback=peep.instances[" + this.id + "].services.GooglePlus.callback"
    };
    this.path = 'res.count';
    this.render();
  }

  return GooglePlus;

})(peep.Service);

peep.LinkedIn = (function(_super) {

  __extends(LinkedIn, _super);

  function LinkedIn(node, id, url, title) {
    this.node = node;
    this.id = id;
    this.url = url;
    this.title = title;
    this.label = 'LinkedIn';
    this["class"] = 'linkedin';
    this.endpoints = {
      share: "http://linkedin.com/shareArticle?url=" + this.url + "&title=" + this.title,
      count: "http://linkedin.com/countserv/count/share?url=" + this.url + "&callback=peep.instances[" + this.id + "].services.LinkedIn.callback"
    };
    this.path = 'res.count';
    this.render();
  }

  return LinkedIn;

})(peep.Service);

peep.Pinterest = (function(_super) {

  __extends(Pinterest, _super);

  function Pinterest(node, id, url, title) {
    this.node = node;
    this.id = id;
    this.url = url;
    this.title = title;
    this.label = 'Pinterest';
    this["class"] = 'pinterest';
    this.endpoints = {
      share: "https://pinterest.com/pin/create/button/?media=" + this.url + "&description=" + this.title,
      count: "http://api.pinterest.com/v1/urls/count.json?url=" + this.url + "&callback=peep.instances[" + this.id + "].services.Pinterest.callback"
    };
    this.path = 'res.count';
    this.render();
  }

  return Pinterest;

})(peep.Service);

peep.Twitter = (function(_super) {

  __extends(Twitter, _super);

  function Twitter(node, id, url, title) {
    this.node = node;
    this.id = id;
    this.url = url;
    this.title = title;
    this.label = 'Twitter';
    this["class"] = 'twitter';
    this.endpoints = {
      share: "https://twitter.com/intent/tweet?text=" + this.title + "&url=" + this.url,
      count: "http://urls.api.twitter.com/1/urls/count.json?url=" + this.url + "&callback=peep.instances[" + this.id + "].services.Twitter.callback"
    };
    this.path = 'res.count';
    this.render();
  }

  return Twitter;

})(peep.Service);
